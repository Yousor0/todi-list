{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Jiang\\\\Documents\\\\VSCode\\\\dig4639c\\\\todi-list\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an\r\n * unordered list.\r\n * @param {Object} props\r\n * @param {string[]} props.initialMenuItems\r\n * @returns Component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(initialMenuItems) {\n  _s();\n  const [newMenuItem, setNewMenuItem] = useState(\"\");\n\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n  const [menuItems, setMenuItems] = useState(initialMenuItems);\n  const [filter, setFilter] = useState(\"\");\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  const addMenuItem = useCallback(() => {\n    console.log(\"Added menu item\");\n    //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\n    //   // This involves adding a parameter and changing a class instance variable (props).\n    //   setMenuItems([item, ...menuItems])\n  }, []);\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        /* TODO: 3 */\n      },\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"/oaa6lp+ngPTBrV4SYZja6S1wK0=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","initialMenuItems","newMenuItem","setNewMenuItem","menuItems","setMenuItems","filter","setFilter","addMenuItem","console","log","event","target","value","filteredMenuItems","map","item","index"],"sources":["C:/Users/Andrew Jiang/Documents/VSCode/dig4639c/todi-list/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an\r\n * unordered list.\r\n * @param {Object} props\r\n * @param {string[]} props.initialMenuItems\r\n * @returns Component\r\n */\r\nexport default function Sidebar(initialMenuItems) {\r\n  const [newMenuItem, setNewMenuItem] = useState(\"\");\r\n\r\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\r\n  const [menuItems, setMenuItems] = useState(initialMenuItems);\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n  // Adds a single string passed in as parameter to the state element\r\n  // \"menuItems\" that holds the set of current menu items.\r\n  const addMenuItem = useCallback(() => {\r\n    console.log(\"Added menu item\");\r\n    //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\r\n    //   // This involves adding a parameter and changing a class instance variable (props).\r\n    //   setMenuItems([item, ...menuItems])\r\n  }, []);\r\n\r\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\r\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        id=\"newMenuItemValue\"\r\n        value={newMenuItem}\r\n        onChange={(event) => setNewMenuItem(event.target.value)}\r\n      ></input>\r\n      <br />\r\n      <button\r\n        onClick={() => {\r\n          /* TODO: 3 */\r\n        }}\r\n      >\r\n        Add Item\r\n      </button>\r\n      <br />\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n        placeholder=\"Filter by...\"\r\n      ></input>\r\n\r\n      {/* TODO 1: Render unordered list of filtered menu items */}\r\n      <ul>\r\n        {filteredMenuItems.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA,eAAe,SAASC,OAAO,CAACC,gBAAgB,EAAE;EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAACG,gBAAgB,CAAC;EAE5D,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA;EACA,MAAMU,WAAW,GAAGT,WAAW,CAAC,MAAM;IACpCU,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAER,WAAY;MACnB,QAAQ,EAAGS,KAAK,IAAKR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,OAAO,EAAE,MAAM;QACb;MAAA,CACA;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEP,MAAO;MACd,QAAQ,EAAGK,KAAK,IAAKJ,SAAS,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QACnB,eAGT;MAAA,UACGC,iBAAiB,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC;QAAA,UAAiBD;MAAI,GAAZC,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GApDuBjB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
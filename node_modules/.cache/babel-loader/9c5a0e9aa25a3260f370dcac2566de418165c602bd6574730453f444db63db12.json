{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew Jiang\\\\Documents\\\\VSCode\\\\dig4639c\\\\todi-list\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an\r\n * unordered list.\r\n * @param {Object} props\r\n * @param {string[]} props.initialMenuItems\r\n * @returns Component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems\n  } = _ref;\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  let [filter, setFilter] = useState(\"\");\n  console.log(\"Initial menu items\", initialMenuItems);\n  // TODO 3: Implement addMenuItem to update state with new item\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems(preveMenuItems => [newMenuItem, ...preveMenuItems]);\n      setNewMenuItem(\"\");\n    }\n  }, [newMenuItem, setMenuItems]);\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  const filteredMenuItems = menuItems.filter(item => new RegExp(filter, \"i\").test(item));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"9uJAaehHQ/xgclC4QpFfGNnjx2E=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","initialMenuItems","menuItems","setMenuItems","newMenuItem","setNewMenuItem","filter","setFilter","console","log","addMenuItem","trim","preveMenuItems","filteredMenuItems","item","RegExp","test","event","target","value","map","index"],"sources":["C:/Users/Andrew Jiang/Documents/VSCode/dig4639c/todi-list/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an\r\n * unordered list.\r\n * @param {Object} props\r\n * @param {string[]} props.initialMenuItems\r\n * @returns Component\r\n */\r\nexport default function Sidebar({ initialMenuItems }) {\r\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\r\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\r\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\r\n  let [filter, setFilter] = useState(\"\");\r\n\r\n  console.log(\"Initial menu items\", initialMenuItems);\r\n  // TODO 3: Implement addMenuItem to update state with new item\r\n  let addMenuItem = useCallback(() => {\r\n    if (newMenuItem.trim() !== \"\") {\r\n      setMenuItems((preveMenuItems) => [newMenuItem, ...preveMenuItems]);\r\n      setNewMenuItem(\"\");\r\n    }\r\n  }, [newMenuItem, setMenuItems]);\r\n\r\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\r\n  const filteredMenuItems = menuItems.filter((item) =>\r\n    new RegExp(filter, \"i\").test(item)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        id=\"newMenuItemValue\"\r\n        value={newMenuItem}\r\n        onChange={(event) => setNewMenuItem(event.target.value)}\r\n      ></input>\r\n      <br />\r\n\r\n      <button onClick={addMenuItem}>Add Item</button>\r\n      <br />\r\n\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n        placeholder=\"Filter by...\"\r\n      ></input>\r\n\r\n      {/* TODO 1: Render unordered list of filtered menu items */}\r\n      <ul>\r\n        {filteredMenuItems.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA,eAAe,SAASC,OAAO,OAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAiB,CAAC;EAClD;EACA,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAACG,gBAAgB,CAAC;EAC1D,IAAI,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAER,gBAAgB,CAAC;EACnD;EACA,IAAIS,WAAW,GAAGX,WAAW,CAAC,MAAM;IAClC,IAAIK,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BR,YAAY,CAAES,cAAc,IAAK,CAACR,WAAW,EAAE,GAAGQ,cAAc,CAAC,CAAC;MAClEP,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACD,WAAW,EAAED,YAAY,CAAC,CAAC;;EAE/B;EACA,MAAMU,iBAAiB,GAAGX,SAAS,CAACI,MAAM,CAAEQ,IAAI,IAC9C,IAAIC,MAAM,CAACT,MAAM,EAAE,GAAG,CAAC,CAACU,IAAI,CAACF,IAAI,CAAC,CACnC;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAEV,WAAY;MACnB,QAAQ,EAAGa,KAAK,IAAKZ,cAAc,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAQ,OAAO,EAAET,WAAY;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEJ,MAAO;MACd,QAAQ,EAAGW,KAAK,IAAKV,SAAS,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QACnB,eAGT;MAAA,UACGN,iBAAiB,CAACO,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBACjC;QAAA,UAAiBP;MAAI,GAAZO,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAjDuBrB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}